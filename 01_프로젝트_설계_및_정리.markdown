# 📝 01. 요구사항 및 설계 정리

EduTrack은은 교육과정 신청부터 이수 및 시험까지의 흐름을 담은 교육이력관리 시스템입니다.  
이 문서는 시스템 개발 전 필수적으로 정리해야 할 요구사항과 설계 항목들을 포함합니다.

---

## ✅ 1. 주요 기능 정의

### 👤 사용자 기능
| 기능코드 | 기능명 | 설명 |
|----------|--------|------|
| tR001 | 교육과정 조회 | 달력/목록 형태로 교육과정 확인 |
| tR00101 | 교육과정 상세조회 | 교육 정보 및 신청 버튼 제공 |
| tR002 | 교육신청 내역 | 신청한 교육 목록 확인 |
| tR003 | 이수현황 | 이수 상태 확인 (이수 신청 포함 가능) |
| tR004 | 시험신청 | 시험 신청 가능한 교육 확인 및 신청 |
| tR006 | 공지사항 목록 | 공지사항 전체 목록 조회 |
| tR00601 | 공지사항 상세조회 | 공지사항 세부 내용 확인 |

### 🔒 관리자 기능
| 기능코드 | 기능명 | 설명 |
|----------|--------|------|
| tR900 | 관리자 메인 | 관리자 기능 접근용 대시보드 |
| tR901 | 교육과정 관리 | 교육 등록, 수정, 삭제 |
| tR902 | 신청자 관리 | 신청자 목록 확인, 이수처리 |
| tR903 | 시험관리 | 시험 등록, 대상자 관리 |
| tR904 | 공지사항 관리 | 공지 등록, 수정, 삭제 |
| tR905 | 사용자 관리 | 사용자 목록, 권한 설정 등 |

---

## ✅ 2. 메뉴 구조 설계

1. 메인페이지 (/main)
2. 교육과정 조회 (/course/list)
3. 교육신청 내역 (/my/apply)
4. 이수현황 (/my/progress)
5. 시험신청 (/exam/apply)
6. 공지사항항
7. 관리자 페이지 (접근권한 필요) 
   - 교육과정 관리 (/admin/course) 
   - 신청자 관리 (/admin/apply) 
   - 시험관리 (/admin/exam) 
   - 공지사항 관리 (/admin/notice) 
   - 사용자 관리 (/admin/user)



---

## ✅ 3. URL 규칙 (RESTful 일부 반영)

| 기능 | URL 예시 | 설명 |
|------|----------|------|
| 메인 | `/main` | 메인페이지 (캘린더 + 하이라이트) |
| 교육과정 조회 | `/course/list` | 교육 목록 |
| 상세조회 | `/course/detail?id=1` | GET 방식으로 교육 상세 |
| 교육 신청 | `/course/apply` | POST 방식 또는 /apply/{id} |
| 신청내역 | `/my/apply` | 마이페이지 형태 |
| 공지사항 목록 | `/notice/list` | 사용자용 공지사항 조회 |
| 공지사항 상세 | `/notice/detail?id=5` | 공지사항 상세 조회 |
| 관리자 기능 | `/admin/**` | 관리자 페이지 전용 URI |

---

## ✅ 4. 파일/기능 코드 규칙

- 접두사: `tR` 사용
- 형식 예시:
  - `tR001` – 교육과정 조회
  - `tR00101` – 교육 상세조회
  - `tR002` – 교육신청 내역
  - `tR006` – 공지사항 목록
  - `tR00601` – 공지사항 상세
  - `tR904` – 관리자 공지사항 관리
- 적용 대상: Controller 클래스, View 파일, Mapper ID, 기능 주석 등

---

## ✅ 5. 역할 기반 접근 제어 설계

| 사용자 타입 | 접근 가능 메뉴 |
|-------------|----------------|
| 일반 사용자 | 메뉴 1~6 |
| 관리자 | 메뉴 1~7 전체 |
| 비로그인 | `/main`, `/course/list`, `/course/detail`, `/notice/list` 등 일부만 허용 |

※ `Session`, `Interceptor`, `@PreAuthorize` 또는 커스텀 필터 등으로 제어 예정

---

## ✅ 6. 향후 고려 사항

- 응답 메시지 표준화 (JSON, API 포함 시)
- REST API와 분리 가능한 구조 고려
- 다국어/모바일 대응 (우선순위 낮음)
